<?xml version="1.0" encoding="UTF8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--核心配置-->
<configuration>
    <!--可以直接引用外部配置文件，里面的可以不写-->
    <properties resource="jdbc.properties"/>

    <settings>
        <setting name="logImpl" value="LOG4J"/>
        <!--可以把数据库带下划线的列，映射为实体类中的驼峰式命名-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--显示地开启全局缓存，虽然这玩意默认开启
        步骤1.在配置文件中开启
        步骤2.在要使用二级缓存的Mapper.xml中开启，虽然会有参数，但是直接写<cache/>亦可
        步骤3.将实体类序列化，implements Serializable
        注意：在同一个Mapper下有效，数据优先放入一级缓存
              sqlSession提交或关闭的时候才会启用二级缓存
              数据角度看：数据从数据库中拿出后，会保存在一级缓存，一级缓存关闭后会保存在二级缓存中
              用户角度看：用户进来后先看二级缓存有没有数据，再看一级缓存，最后访问数据库。
        -->
        <setting name="cacheEnabled" value="true"/>
    </settings>
    
    <typeAliases>
        <package name="ssm.mybatis.pojo"/>
    </typeAliases>
    <!--环境，default设置默认环境，这里默认选择id为development的环境-->
    <environments default="development">
        <environment id="development">
            <!--事务管理-->
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--每一个xxxMapper.xml都需要在mybatis-config.xml中进行注册-->
    <mappers>
        <mapper resource="ssm/mybatis/dao/BookMapper.xml"/>
    </mappers>
</configuration>